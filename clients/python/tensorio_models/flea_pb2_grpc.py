# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import flea_pb2 as flea__pb2
from . import repository_pb2 as repository__pb2


class FleaStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Healthz = channel.unary_unary(
        '/api.Flea/Healthz',
        request_serializer=repository__pb2.HealthCheckRequest.SerializeToString,
        response_deserializer=repository__pb2.HealthCheckResponse.FromString,
        )
    self.Config = channel.unary_unary(
        '/api.Flea/Config',
        request_serializer=repository__pb2.ConfigRequest.SerializeToString,
        response_deserializer=repository__pb2.ConfigResponse.FromString,
        )
    self.CreateTask = channel.unary_unary(
        '/api.Flea/CreateTask',
        request_serializer=flea__pb2.TaskDetails.SerializeToString,
        response_deserializer=flea__pb2.TaskDetails.FromString,
        )
    self.ModifyTask = channel.unary_unary(
        '/api.Flea/ModifyTask',
        request_serializer=flea__pb2.ModifyTaskRequest.SerializeToString,
        response_deserializer=flea__pb2.TaskDetails.FromString,
        )
    self.ListTasks = channel.unary_unary(
        '/api.Flea/ListTasks',
        request_serializer=flea__pb2.ListTasksRequest.SerializeToString,
        response_deserializer=flea__pb2.ListTasksResponse.FromString,
        )
    self.GetTask = channel.unary_unary(
        '/api.Flea/GetTask',
        request_serializer=flea__pb2.GetTaskRequest.SerializeToString,
        response_deserializer=flea__pb2.TaskDetails.FromString,
        )
    self.StartTask = channel.unary_unary(
        '/api.Flea/StartTask',
        request_serializer=flea__pb2.StartTaskRequest.SerializeToString,
        response_deserializer=flea__pb2.StartTaskResponse.FromString,
        )
    self.JobError = channel.unary_unary(
        '/api.Flea/JobError',
        request_serializer=flea__pb2.JobErrorRequest.SerializeToString,
        response_deserializer=flea__pb2.GenericResponse.FromString,
        )
    self.Admin = channel.unary_unary(
        '/api.Flea/Admin',
        request_serializer=flea__pb2.AdminRequest.SerializeToString,
        response_deserializer=flea__pb2.GenericResponse.FromString,
        )


class FleaServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Healthz(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Config(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateTask(self, request, context):
    """Task creator API/Flow:

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ModifyTask(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListTasks(self, request, context):
    """Task doer API/Flow:

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTask(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartTask(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def JobError(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Admin(self, request, context):
    """Admin

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FleaServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Healthz': grpc.unary_unary_rpc_method_handler(
          servicer.Healthz,
          request_deserializer=repository__pb2.HealthCheckRequest.FromString,
          response_serializer=repository__pb2.HealthCheckResponse.SerializeToString,
      ),
      'Config': grpc.unary_unary_rpc_method_handler(
          servicer.Config,
          request_deserializer=repository__pb2.ConfigRequest.FromString,
          response_serializer=repository__pb2.ConfigResponse.SerializeToString,
      ),
      'CreateTask': grpc.unary_unary_rpc_method_handler(
          servicer.CreateTask,
          request_deserializer=flea__pb2.TaskDetails.FromString,
          response_serializer=flea__pb2.TaskDetails.SerializeToString,
      ),
      'ModifyTask': grpc.unary_unary_rpc_method_handler(
          servicer.ModifyTask,
          request_deserializer=flea__pb2.ModifyTaskRequest.FromString,
          response_serializer=flea__pb2.TaskDetails.SerializeToString,
      ),
      'ListTasks': grpc.unary_unary_rpc_method_handler(
          servicer.ListTasks,
          request_deserializer=flea__pb2.ListTasksRequest.FromString,
          response_serializer=flea__pb2.ListTasksResponse.SerializeToString,
      ),
      'GetTask': grpc.unary_unary_rpc_method_handler(
          servicer.GetTask,
          request_deserializer=flea__pb2.GetTaskRequest.FromString,
          response_serializer=flea__pb2.TaskDetails.SerializeToString,
      ),
      'StartTask': grpc.unary_unary_rpc_method_handler(
          servicer.StartTask,
          request_deserializer=flea__pb2.StartTaskRequest.FromString,
          response_serializer=flea__pb2.StartTaskResponse.SerializeToString,
      ),
      'JobError': grpc.unary_unary_rpc_method_handler(
          servicer.JobError,
          request_deserializer=flea__pb2.JobErrorRequest.FromString,
          response_serializer=flea__pb2.GenericResponse.SerializeToString,
      ),
      'Admin': grpc.unary_unary_rpc_method_handler(
          servicer.Admin,
          request_deserializer=flea__pb2.AdminRequest.FromString,
          response_serializer=flea__pb2.GenericResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.Flea', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
