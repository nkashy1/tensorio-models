apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ include "tensorio-models.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "tensorio-models.name" . }}
    helm.sh/chart: {{ include "tensorio-models.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "tensorio-models.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "tensorio-models.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.deployment.repository }}:{{ .Values.deployment.tag }}"
          imagePullPolicy: {{ .Values.deployment.pullPolicy }}
          volumeMounts:
            {{- if .Values.deployment.serviceAccount }}
            - name: sacred
              mountPath: {{ .Values.deployment.serviceAccount.mountPath }}
            {{- end }}
          env:
            - name: BACKEND
              value: {{ .Values.deployment.backend }}
            {{- if .Values.deployment.repositoryGcsBucket }}
            - name: REPOSITORY_GCS_BUCKET
              value: {{ .Values.deployment.repositoryGcsBucket }}
            {{- end }}
            {{- if .Values.deployment.serviceAccount }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "{{ .Values.deployment.serviceAccount.mountPath }}/{{ .Values.deployment.serviceAccount.key }}"
            {{- end }}
          args: ["-backend", "$(BACKEND)"]
          ports:
            - name: grpc
              containerPort: 8080
              protocol: TCP
            - name: rest
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/repository/healthz
              port: rest
          readinessProbe:
            httpGet:
              path: /v1/repository/healthz
              port: rest
      volumes:
        {{- if .Values.deployment.serviceAccount }}
        - name: sacred
          secret:
            secretName: {{ .Values.deployment.serviceAccount.secret }}
        {{- end }}
